# EasyPanel Docker Compose - Sistema de Barbearia
# Use este arquivo no EasyPanel como "Docker Compose"

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: barbearia_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123_CHANGE_THIS}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  # Backend API
  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: ${DB_PASSWORD:-postgres123_CHANGE_THIS}
      DB_DATABASE: barbearia_db
      JWT_SECRET: ${JWT_SECRET:-default-jwt-secret-CHANGE-THIS-IMMEDIATELY}
      JWT_EXPIRE: 8h
      # SMTP Configuration (opcional)
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web App
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - api
    networks:
      - app-network
    restart: unless-stopped
    ports:
      - "80:80"
    # Labels para EasyPanel/Traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.barbearia.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.services.barbearia.loadbalancer.server.port=80"
      - "traefik.http.routers.barbearia.entrypoints=websecure"
      - "traefik.http.routers.barbearia.tls.certresolver=letsencrypt"

volumes:
  db_data:
    driver: local

networks:
  app-network:
    driver: bridge
